Problem Statement
Given an array consisting of only 0s, 1s and 2s, sort the array.

Solution
Maintain three indices low = 0, mid = 0, and high = N-1, where N is the number of elements in the array.
If A[mid] == 0, swap A[mid] and A[low] and increment low and mid pointers by 1.
If A[mid] == 1, increment the mid pointer by 1.
If A[mid] == 2, swap A[high] and A[mid] and decrement high by 1.

Solution.java
---------------
public class Solution
{
    public static void sort012(int[] arr)
    {
        int n = arr.length;
        int low = 0, mid = 0, high = n-1, temp = 0;
		while(mid <= high) {
            if(arr[mid] == 0) {
                temp = arr[low];
                arr[low] = arr[mid];
                arr[mid] = temp;
                mid++;
                low++;
            } else if(arr[mid] == 1) {
                mid++;
            } else {
                temp = arr[mid];
				arr[mid] = arr[high];
				arr[high] = temp;
                high--;
            }
        }
    }
}
